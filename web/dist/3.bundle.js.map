{"version":3,"sources":["webpack:///./src/components/language-select/language-select.css?acc8","webpack:///./src/components/language-select/language-select.tsx","webpack:///./src/components/plot/plot.css?85f4","webpack:///./src/components/plot/plot.tsx","webpack:///./src/constants.ts"],"names":[],"mappings":"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","file":"3.bundle.js","sourcesContent":["// extracted by mini-css-extract-plugin","import { Localized } from 'fluent-react/compat';\nimport Downshift from 'downshift';\nimport * as React from 'react';\n\nconst contributableLocales = require('../../../../locales/contributable.json') as string[];\n\nimport './language-select.css';\n\nexport const ALL_LOCALES = 'all-locales';\n\nexport default ({\n  value,\n  onChange,\n}: {\n  value: string;\n  onChange: (locale: string) => any;\n}) => (\n  <Downshift initialInputValue={value} onChange={onChange}>\n    {({ getItemProps, highlightedIndex, isOpen, toggleMenu }) => (\n      <div className=\"language-select\" onClick={() => toggleMenu()}>\n        <Localized id={value}>\n          <div className=\"current\" />\n        </Localized>\n        {isOpen && (\n          <ul onClick={() => toggleMenu()}>\n            {[ALL_LOCALES].concat(contributableLocales).map((l, i) => (\n              <Localized key={l} id={l}>\n                <li\n                  className={[\n                    l === value ? 'selected' : '',\n                    highlightedIndex === i ? 'highlighted' : '',\n                  ].join(' ')}\n                  {...getItemProps({ item: l })}\n                  value={l}\n                />\n              </Localized>\n            ))}\n          </ul>\n        )}\n      </div>\n    )}\n  </Downshift>\n);\n","// extracted by mini-css-extract-plugin","import * as React from 'react';\n\nexport const Y_OFFSET = 10;\nexport const TOTAL_LINE_MARGIN = 154;\nexport const TEXT_OFFSET = 40;\nexport const LINE_OFFSET = TEXT_OFFSET + 5;\nexport const PLOT_PADDING = 13;\n\nimport './plot.css';\n\nexport type PlotProps = {\n  children: (\n    state: {\n      max: number;\n      width: number;\n    }\n  ) => React.ReactNode;\n  data: any[];\n  formatNumber: (n: number) => string;\n  max: number;\n  renderXTickLabel: (datum: any, i: number) => React.ReactNode;\n  tickCount: number;\n  tickMultipliers: number[];\n} & React.SVGProps<SVGElement>;\n\nexport default class Plot extends React.Component<\n  PlotProps,\n  {\n    width: number;\n  }\n> {\n  state: {\n    width: number;\n  } = {\n    width: 0,\n  };\n\n  svgRef = React.createRef<SVGSVGElement>();\n\n  async componentDidMount() {\n    window.addEventListener('resize', this.updateSize);\n    this.updateSize();\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.updateSize);\n  }\n\n  updateSize = () => {\n    this.setState({\n      width: this.svgRef.current.getBoundingClientRect().width,\n    });\n  };\n\n  render() {\n    let {\n      children,\n      data,\n      formatNumber,\n      max,\n      renderXTickLabel,\n      tickCount,\n      tickMultipliers,\n      ...props\n    } = this.props;\n    const { width } = this.state;\n\n    const tickMultiplier =\n      tickMultipliers\n        .slice()\n        .reverse()\n        .find(m => max > m) || 1;\n    const ticks = (tickCount - 1) * tickMultiplier;\n\n    max = max + (ticks - (max % ticks));\n\n    return (\n      <svg\n        width=\"100%\"\n        height=\"100%\"\n        className=\"plot\"\n        {...props}\n        ref={this.svgRef}>\n        {Array.from({ length: tickCount }).map((_, i) => {\n          const y = (i * TOTAL_LINE_MARGIN) / tickCount + Y_OFFSET;\n          return (\n            <React.Fragment key={i}>\n              <text\n                className=\"tick-label\"\n                x={TEXT_OFFSET}\n                y={y}\n                dominantBaseline=\"middle\"\n                textAnchor=\"end\">\n                {formatNumber(\n                  Math.round(((tickCount - 1 - i) * max) / (tickCount - 1))\n                )}\n              </text>\n              <line\n                x1={LINE_OFFSET}\n                y1={y}\n                x2={width + PLOT_PADDING}\n                y2={y}\n                stroke=\"rgba(0,0,0,0.2)\"\n              />\n            </React.Fragment>\n          );\n        })}\n        {data.map((datum, i) => (\n          <text\n            key={i}\n            className=\"x tick-label\"\n            x={\n              LINE_OFFSET +\n              i * ((width - PLOT_PADDING - TEXT_OFFSET) / data.length)\n            }\n            y={Y_OFFSET + TOTAL_LINE_MARGIN}>\n            {renderXTickLabel(datum, i)}\n          </text>\n        ))}\n        {children({ width, max })}\n      </svg>\n    );\n  }\n}\n\nconst BAR_COUNT = 10;\nconst BAR_WIDTH_LG = 15;\nconst BAR_WIDTH_XS = 7;\nconst TICK_COUNT = 4;\nconst BAR_HEIGHT = TOTAL_LINE_MARGIN * ((TICK_COUNT - 1) / TICK_COUNT);\n\nfunction formatNumber(n: number) {\n  return n > 1000 ? Math.round(n / 1000) + 'k' : n.toString();\n}\n\nexport const BarPlot = ({\n  data,\n}: {\n  data: { date: string; value: number }[];\n}) => (\n  <Plot\n    data={data}\n    formatNumber={formatNumber}\n    max={(data || []).reduce((max, d) => Math.max(max, d.value), 0)}\n    renderXTickLabel={({ date }) => {\n      const timeString = new Date(date)\n        .toLocaleString([], {\n          hour: '2-digit',\n          minute: '2-digit',\n        })\n        .replace(' AM', '')\n        .replace(' PM', '');\n      return window.innerWidth < 450 ? timeString.split(':')[0] : timeString;\n    }}\n    tickCount={TICK_COUNT}\n    tickMultipliers={[5, 10, 100, 1000]}>\n    {({ max, width }) => {\n      const barWidth = width < 400 ? BAR_WIDTH_XS : BAR_WIDTH_LG;\n      const getBarX = (i: number) =>\n        LINE_OFFSET +\n        PLOT_PADDING -\n        barWidth / 2 +\n        (i * (width - PLOT_PADDING - TEXT_OFFSET)) / BAR_COUNT;\n\n      return (\n        <React.Fragment>\n          {Array.from({ length: BAR_COUNT }).map((_, i) => (\n            <rect\n              key={i}\n              className=\"bg\"\n              x={getBarX(i)}\n              y={Y_OFFSET}\n              width={barWidth}\n              height={BAR_HEIGHT}\n            />\n          ))}\n\n          <defs>\n            <linearGradient id=\"blue-purple\" x2=\"0%\" y2=\"100%\">\n              <stop offset=\"5%\" stopColor=\"#88d1f1\" />\n              <stop offset=\"95%\" stopColor=\"#b1b5e5\" />\n            </linearGradient>\n          </defs>\n          {(data || []).map(({ value }: any, i: number) => {\n            const height = (value * BAR_HEIGHT) / max || 0;\n            return (\n              <rect\n                key={i}\n                fill=\"url(#blue-purple)\"\n                className={i + 1 === BAR_COUNT ? 'current' : ''}\n                x={getBarX(i)}\n                y={Y_OFFSET + BAR_HEIGHT - height}\n                width={barWidth}\n                height={height}\n              />\n            );\n          })}\n        </React.Fragment>\n      );\n    }}\n  </Plot>\n);\n","export const DAILY_GOAL = Object.freeze({ speak: 1200, listen: 2400 });\n\nexport const BENEFITS = [\n  'rich-data',\n  'improve-audio',\n  'keep-track',\n  'compare-progress',\n  'view-goals',\n  'join-newsletter',\n];\n\nexport const WHATS_PUBLIC = [\n  'email-not-public',\n  'recordings-and-locale-public',\n  'username-optin-public',\n  'demographic-deidentified',\n  'username-email-not-demographic',\n];\n"],"sourceRoot":""}